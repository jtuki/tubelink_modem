<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\output\output.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\output\output.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5050106: Last Updated: Tue Aug 11 15:52:20 2015
<BR><P>
<H3>Maximum Stack Usage =          0 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>

<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[18]">ADC1_COMP_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[18]">ADC1_COMP_IRQHandler</a><BR>
 <LI><a href="#[8]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">HardFault_Handler</a><BR>
 <LI><a href="#[ad]">haddock_get_time_tick_now</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[94]">print_log</a><BR>
 <LI><a href="#[94]">print_log</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[94]">print_log</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[18]">ADC1_COMP_IRQHandler</a> from startup_stm32l051xx.o(.text) referenced from startup_stm32l051xx.o(RESET)
 <LI><a href="#[15]">DMA1_Channel1_IRQHandler</a> from startup_stm32l051xx.o(.text) referenced from startup_stm32l051xx.o(RESET)
 <LI><a href="#[16]">DMA1_Channel2_3_IRQHandler</a> from startup_stm32l051xx.o(.text) referenced from startup_stm32l051xx.o(RESET)
 <LI><a href="#[17]">DMA1_Channel4_5_6_7_IRQHandler</a> from startup_stm32l051xx.o(.text) referenced from startup_stm32l051xx.o(RESET)
 <LI><a href="#[a]">DebugMon_Handler</a> from stm32l0xx_it.o(i.DebugMon_Handler) referenced from startup_stm32l051xx.o(RESET)
 <LI><a href="#[12]">EXTI0_1_IRQHandler</a> from stm32l0xx_it.o(i.EXTI0_1_IRQHandler) referenced from startup_stm32l051xx.o(RESET)
 <LI><a href="#[13]">EXTI2_3_IRQHandler</a> from startup_stm32l051xx.o(.text) referenced from startup_stm32l051xx.o(RESET)
 <LI><a href="#[14]">EXTI4_15_IRQHandler</a> from stm32l0xx_it.o(i.EXTI4_15_IRQHandler) referenced from startup_stm32l051xx.o(RESET)
 <LI><a href="#[10]">FLASH_IRQHandler</a> from startup_stm32l051xx.o(.text) referenced from startup_stm32l051xx.o(RESET)
 <LI><a href="#[8]">HardFault_Handler</a> from stm32l0xx_it.o(i.HardFault_Handler) referenced from startup_stm32l051xx.o(RESET)
 <LI><a href="#[1e]">I2C1_IRQHandler</a> from startup_stm32l051xx.o(.text) referenced from startup_stm32l051xx.o(RESET)
 <LI><a href="#[1f]">I2C2_IRQHandler</a> from startup_stm32l051xx.o(.text) referenced from startup_stm32l051xx.o(RESET)
 <LI><a href="#[19]">LPTIM1_IRQHandler</a> from startup_stm32l051xx.o(.text) referenced from startup_stm32l051xx.o(RESET)
 <LI><a href="#[24]">LPUART1_IRQHandler</a> from startup_stm32l051xx.o(.text) referenced from startup_stm32l051xx.o(RESET)
 <LI><a href="#[7]">NMI_Handler</a> from stm32l0xx_it.o(i.NMI_Handler) referenced from startup_stm32l051xx.o(RESET)
 <LI><a href="#[e]">PVD_IRQHandler</a> from startup_stm32l051xx.o(.text) referenced from startup_stm32l051xx.o(RESET)
 <LI><a href="#[b]">PendSV_Handler</a> from stm32l0xx_it.o(i.PendSV_Handler) referenced from startup_stm32l051xx.o(RESET)
 <LI><a href="#[11]">RCC_IRQHandler</a> from startup_stm32l051xx.o(.text) referenced from startup_stm32l051xx.o(RESET)
 <LI><a href="#[f]">RTC_IRQHandler</a> from startup_stm32l051xx.o(.text) referenced from startup_stm32l051xx.o(RESET)
 <LI><a href="#[6]">Reset_Handler</a> from startup_stm32l051xx.o(.text) referenced from startup_stm32l051xx.o(RESET)
 <LI><a href="#[20]">SPI1_IRQHandler</a> from startup_stm32l051xx.o(.text) referenced from startup_stm32l051xx.o(RESET)
 <LI><a href="#[21]">SPI2_IRQHandler</a> from startup_stm32l051xx.o(.text) referenced from startup_stm32l051xx.o(RESET)
 <LI><a href="#[9]">SVC_Handler</a> from stm32l0xx_it.o(i.SVC_Handler) referenced from startup_stm32l051xx.o(RESET)
 <LI><a href="#[c]">SysTick_Handler</a> from stm32l0xx_it.o(i.SysTick_Handler) referenced from startup_stm32l051xx.o(RESET)
 <LI><a href="#[26]">SystemInit</a> from system_stm32l0xx.o(i.SystemInit) referenced from startup_stm32l051xx.o(.text)
 <LI><a href="#[1c]">TIM21_IRQHandler</a> from startup_stm32l051xx.o(.text) referenced from startup_stm32l051xx.o(RESET)
 <LI><a href="#[1d]">TIM22_IRQHandler</a> from startup_stm32l051xx.o(.text) referenced from startup_stm32l051xx.o(RESET)
 <LI><a href="#[1a]">TIM2_IRQHandler</a> from startup_stm32l051xx.o(.text) referenced from startup_stm32l051xx.o(RESET)
 <LI><a href="#[1b]">TIM6_IRQHandler</a> from startup_stm32l051xx.o(.text) referenced from startup_stm32l051xx.o(RESET)
 <LI><a href="#[22]">USART1_IRQHandler</a> from startup_stm32l051xx.o(.text) referenced from startup_stm32l051xx.o(RESET)
 <LI><a href="#[23]">USART2_IRQHandler</a> from stm32l0xx_it.o(i.USART2_IRQHandler) referenced from startup_stm32l051xx.o(RESET)
 <LI><a href="#[d]">WWDG_IRQHandler</a> from startup_stm32l051xx.o(.text) referenced from startup_stm32l051xx.o(RESET)
 <LI><a href="#[27]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32l051xx.o(.text)
 <LI><a href="#[28]">_sputc</a> from printfa.o(i._sputc) referenced from printfa.o(i.__0sprintf)
 <LI><a href="#[28]">_sputc</a> from printfa.o(i._sputc) referenced from printfa.o(i.__0vsprintf)
 <LI><a href="#[29]">device_mac_engine_entry</a> from mac_engine.o(i.device_mac_engine_entry) referenced from mac_engine.o(i.device_mac_engine_init)
 <LI><a href="#[3]">hostIf_SendByteWithIt__</a> from app_hostif.o(i.hostIf_SendByteWithIt__) referenced 2 times from app_hostif.o(.data)
 <LI><a href="#[2]">hostIf_UartDeInit__</a> from app_hostif.o(i.hostIf_UartDeInit__) referenced 2 times from app_hostif.o(.data)
 <LI><a href="#[5]">hostIf_UartEvent__</a> from app_hostif.o(i.hostIf_UartEvent__) referenced 2 times from app_hostif.o(.data)
 <LI><a href="#[1]">hostIf_UartInit__</a> from app_hostif.o(i.hostIf_UartInit__) referenced 2 times from app_hostif.o(.data)
 <LI><a href="#[2a]">lpwan_radio_event__</a> from lpwan_radio.o(i.lpwan_radio_event__) referenced from lpwan_radio.o(i.lpwan_radio_init)
 <LI><a href="#[25]">main</a> from kernel_main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[2b]">proc_HostifEntry__</a> from process_hostif.o(i.proc_HostifEntry__) referenced from process_hostif.o(i.proc_HostifInit)
 <LI><a href="#[2c]">proc_test_end_device_app_entry</a> from process_test_end_device_app.o(i.proc_test_end_device_app_entry) referenced from process_test_end_device_app.o(i.proc_test_end_device_app_init)
 <LI><a href="#[2d]">radio_controller_entry</a> from radio_controller.o(i.radio_controller_entry) referenced from radio_controller.o(i.radio_controller_init)
 <LI><a href="#[4]">systick_Get</a> from systick.o(i.systick_Get) referenced 2 times from app_hostif.o(.data)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[27]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l051xx.o(.text)
</UL>
<P><STRONG><a name="[2e]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[45]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[6]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32l051xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l051xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>ADC1_COMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l051xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_COMP_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_COMP_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l051xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l051xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l051xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA1_Channel2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l051xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l051xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_Channel4_5_6_7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l051xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l051xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l051xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l051xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l051xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l051xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l051xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l051xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l051xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l051xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>LPTIM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l051xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l051xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>LPUART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l051xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l051xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l051xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l051xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l051xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l051xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l051xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l051xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l051xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l051xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l051xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l051xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>TIM21_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l051xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l051xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>TIM22_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l051xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l051xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l051xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l051xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>TIM6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l051xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l051xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l051xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l051xx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l051xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l051xx.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, uidiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_SetReceiveByte
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_SendBytes
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_ReceiveBytes
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_Poll
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_GetSendByte
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__haddock_calc_timeout_value
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_Init
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hdk_randr
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_mac_engine_entry
</UL>

<P><STRONG><a name="[30]"></a>__aeabi_idivmod</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, idiv.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hdk_rand
</UL>

<P><STRONG><a name="[cc]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lpwan_parse_frame_header
</UL>

<P><STRONG><a name="[33]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[32]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_RxInit
</UL>

<P><STRONG><a name="[34]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[35]"></a>__aeabi_dadd</STRONG> (Thumb, 328 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_RxProcess
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
</UL>

<P><STRONG><a name="[3a]"></a>__aeabi_dsub</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[3b]"></a>__aeabi_drsub</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[3c]"></a>__aeabi_dmul</STRONG> (Thumb, 202 bytes, Stack size 0 bytes, dmul.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_RxProcess
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[3d]"></a>__aeabi_ddiv</STRONG> (Thumb, 234 bytes, Stack size 0 bytes, ddiv.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276LoRaSetRFFrequency
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[3e]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, dflti.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_RxProcess
</UL>

<P><STRONG><a name="[3f]"></a>__aeabi_ui2d</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, dfltui.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_RxProcess
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276LoRaSetRFFrequency
</UL>

<P><STRONG><a name="[40]"></a>__aeabi_d2uiz</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, dfixui.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276LoRaSetRFFrequency
</UL>

<P><STRONG><a name="[42]"></a>__aeabi_uldivmod</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[36]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[41]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[37]"></a>__aeabi_lasr</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, llsshr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[39]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, depilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[38]"></a>_double_epilogue</STRONG> (Thumb, 164 bytes, Stack size 0 bytes, depilogue.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_clz
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[44]"></a>__aeabi_d2ulz</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[9f]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, cdrcmple.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[2f]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[a]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l0xx_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l051xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI0_1_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32l0xx_it.o(i.EXTI0_1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l051xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI4_15_IRQHandler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32l0xx_it.o(i.EXTI4_15_IRQHandler))
<BR><BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276FHSSChangeChannel_ISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l051xx.o(RESET)
</UL>
<P><STRONG><a name="[e3]"></a>HAL_GPIO_DeInit</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, stm32l0xx_hal_gpio.o(i.HAL_GPIO_DeInit))
<BR><BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_DioDeInit
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_SpiDeInit
</UL>

<P><STRONG><a name="[c9]"></a>HAL_GPIO_Init</STRONG> (Thumb, 338 bytes, Stack size 0 bytes, stm32l0xx_hal_gpio.o(i.HAL_GPIO_Init))
<BR><BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_DioInit
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1276_Dio2EnableInt
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_SpiInit
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostIf_UartInit__
</UL>

<P><STRONG><a name="[e6]"></a>HAL_GPIO_ReadPin</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32l0xx_hal_gpio.o(i.HAL_GPIO_ReadPin))
<BR><BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_DioReadDio3
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_DioReadDio1
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_DioReadDio0
</UL>

<P><STRONG><a name="[e8]"></a>HAL_GPIO_WritePin</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32l0xx_hal_gpio.o(i.HAL_GPIO_WritePin))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_DioSetDioCtrl
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_DioReset
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_SpiSetNssHigh
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_SpiInit
</UL>

<P><STRONG><a name="[4a]"></a>HAL_GetTick</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, systick.o(i.HAL_GetTick))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitOnFlagUntilTimeout
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
</UL>

<P><STRONG><a name="[47]"></a>HAL_Init</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32l0xx_hal.o(i.HAL_Init))
<BR><BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__haddock_hal_stm32l051_init
</UL>

<P><STRONG><a name="[48]"></a>HAL_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l0xx_hal_msp.o(i.HAL_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[cb]"></a>HAL_NVIC_EnableIRQ</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32l0xx_hal_cortex.o(i.HAL_NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1276_Dio2EnableInt
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostIf_UartInit__
</UL>

<P><STRONG><a name="[ca]"></a>HAL_NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, stm32l0xx_hal_cortex.o(i.HAL_NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1276_Dio2EnableInt
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostIf_UartInit__
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_Init
</UL>

<P><STRONG><a name="[49]"></a>HAL_RCC_ClockConfig</STRONG> (Thumb, 572 bytes, Stack size 0 bytes, stm32l0xx_hal_rcc.o(i.HAL_RCC_ClockConfig))
<BR><BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__haddock_hal_stm32l051_init
</UL>

<P><STRONG><a name="[4b]"></a>HAL_RCC_GetHCLKFreq</STRONG> (Thumb, 120 bytes, Stack size 0 bytes, stm32l0xx_hal_rcc.o(i.HAL_RCC_GetHCLKFreq))
<BR><BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK2Freq
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_Init
</UL>

<P><STRONG><a name="[4c]"></a>HAL_RCC_GetPCLK1Freq</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32l0xx_hal_rcc.o(i.HAL_RCC_GetPCLK1Freq))
<BR><BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[4d]"></a>HAL_RCC_GetPCLK2Freq</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32l0xx_hal_rcc.o(i.HAL_RCC_GetPCLK2Freq))
<BR><BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[4e]"></a>HAL_RCC_GetSysClockFreq</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, stm32l0xx_hal_rcc.o(i.HAL_RCC_GetSysClockFreq))
<BR><BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[4f]"></a>HAL_RCC_OscConfig</STRONG> (Thumb, 1100 bytes, Stack size 0 bytes, stm32l0xx_hal_rcc.o(i.HAL_RCC_OscConfig))
<BR><BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__haddock_hal_stm32l051_init
</UL>

<P><STRONG><a name="[50]"></a>HAL_SPI_DeInit</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, stm32l0xx_hal_spi.o(i.HAL_SPI_DeInit))
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspDeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_SpiInit
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_SpiDeInit
</UL>

<P><STRONG><a name="[52]"></a>HAL_SPI_Init</STRONG> (Thumb, 130 bytes, Stack size 0 bytes, stm32l0xx_hal_spi.o(i.HAL_SPI_Init))
<BR><BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_SpiInit
</UL>

<P><STRONG><a name="[51]"></a>HAL_SPI_MspDeInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l0xx_hal_spi.o(i.HAL_SPI_MspDeInit))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_DeInit
</UL>

<P><STRONG><a name="[53]"></a>HAL_SPI_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l0xx_hal_spi.o(i.HAL_SPI_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Init
</UL>

<P><STRONG><a name="[54]"></a>HAL_SPI_Receive</STRONG> (Thumb, 492 bytes, Stack size 0 bytes, stm32l0xx_hal_spi.o(i.HAL_SPI_Receive))
<BR><BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_SpiRead
</UL>

<P><STRONG><a name="[57]"></a>HAL_SPI_Transmit</STRONG> (Thumb, 400 bytes, Stack size 0 bytes, stm32l0xx_hal_spi.o(i.HAL_SPI_Transmit))
<BR><BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_SpiWrite
</UL>

<P><STRONG><a name="[56]"></a>HAL_SPI_TransmitReceive</STRONG> (Thumb, 720 bytes, Stack size 0 bytes, stm32l0xx_hal_spi.o(i.HAL_SPI_TransmitReceive))
<BR><BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Receive
</UL>

<P><STRONG><a name="[eb]"></a>HAL_SYSTICK_Config</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, stm32l0xx_hal_cortex.o(i.HAL_SYSTICK_Config))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_Init
</UL>

<P><STRONG><a name="[5a]"></a>HAL_UARTEx_WakeupCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l0xx_hal_uart_ex.o(i.HAL_UARTEx_WakeupCallback))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[59]"></a>HAL_UART_ErrorCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l0xx_hal_uart.o(i.HAL_UART_ErrorCallback))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[58]"></a>HAL_UART_IRQHandler</STRONG> (Thumb, 328 bytes, Stack size 0 bytes, stm32l0xx_hal_uart.o(i.HAL_UART_IRQHandler))
<BR><BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_ErrorCallback
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_WakeupCallback
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Transmit_IT
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Receive_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[5d]"></a>HAL_UART_Init</STRONG> (Thumb, 118 bytes, Stack size 0 bytes, stm32l0xx_hal_uart.o(i.HAL_UART_Init))
<BR><BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_CheckIdleState
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_AdvFeatureConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostIf_UartInit__
</UL>

<P><STRONG><a name="[5e]"></a>HAL_UART_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l0xx_hal_uart.o(i.HAL_UART_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[64]"></a>HAL_UART_Receive_IT</STRONG> (Thumb, 240 bytes, Stack size 0 bytes, stm32l0xx_hal_uart.o(i.HAL_UART_Receive_IT))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxCpltCallback
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostIf_UartInit__
</UL>

<P><STRONG><a name="[62]"></a>HAL_UART_RxCpltCallback</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, app_hostif.o(i.HAL_UART_RxCpltCallback))
<BR><BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_SetReceiveByte
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Receive_IT
</UL>

<P><STRONG><a name="[67]"></a>HAL_UART_Transmit_IT</STRONG> (Thumb, 148 bytes, Stack size 0 bytes, stm32l0xx_hal_uart.o(i.HAL_UART_Transmit_IT))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_TxCpltCallback
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostIf_SendByteWithIt__
</UL>

<P><STRONG><a name="[65]"></a>HAL_UART_TxCpltCallback</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, app_hostif.o(i.HAL_UART_TxCpltCallback))
<BR><BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_GetSendByte
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Transmit_IT
</UL>

<P><STRONG><a name="[8]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l0xx_it.o(i.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l051xx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l0xx_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l051xx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l0xx_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l051xx.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>Rf_Get</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, rf_manager.o(i.Rf_Get))
<BR><BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;haddock_memcpy
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rf_SetStateRequset
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_GetPacketSize
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_GetBufferAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lpwan_radio_read
</UL>

<P><STRONG><a name="[d1]"></a>Rf_GetCurState</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rf_manager.o(i.Rf_GetCurState))
<BR><BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lpwan_radio_tx
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lpwan_radio_start_rx
</UL>

<P><STRONG><a name="[6d]"></a>Rf_Init</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, rf_manager.o(i.Rf_Init))
<BR><BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lpwan_radio_init
</UL>

<P><STRONG><a name="[6f]"></a>Rf_ReceiveStart</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, rf_manager.o(i.Rf_ReceiveStart))
<BR><BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rf_SetStateRequset
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lpwan_radio_start_rx
</UL>

<P><STRONG><a name="[70]"></a>Rf_Routine</STRONG> (Thumb, 314 bytes, Stack size 0 bytes, rf_manager.o(i.Rf_Routine))
<BR><BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_TxProcess
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_TxInit
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_SleepProcess
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_SleepInit
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_RxProcess
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_RxInit
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_CADProcess
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_CADInit
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lpwan_radio_routine
</UL>

<P><STRONG><a name="[79]"></a>Rf_Send</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, rf_manager.o(i.Rf_Send))
<BR><BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;haddock_memcpy
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rf_SetStateRequset
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_SetPacketSize
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_GetBufferAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lpwan_radio_tx
</UL>

<P><STRONG><a name="[6c]"></a>Rf_SetStateRequset</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, rf_manager.o(i.Rf_SetStateRequset))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rf_Send
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rf_ReceiveStart
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rf_Get
</UL>

<P><STRONG><a name="[7b]"></a>Rf_Stop</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, rf_manager.o(i.Rf_Stop))
<BR><BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_Stop
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lpwan_radio_stop_rx
</UL>

<P><STRONG><a name="[9]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l0xx_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l051xx.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>SX1276FHSSChangeChannel_ISR</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, sx1278.o(i.SX1276FHSSChangeChannel_ISR))
<BR><BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276LoRaSetSymbTimeout
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276LoRaSetRFFrequency
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_SpiWrite
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_SpiSetNssHigh
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_SpiRead
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_15_IRQHandler
</UL>

<P><STRONG><a name="[82]"></a>SX1276LoRaSetOpMode</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, sx1278.o(i.SX1276LoRaSetOpMode))
<BR><BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_DioSetDioCtrl
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_SpiWrite
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_SpiSetNssHigh
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_TxProcess
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_TxInit
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_Stop
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_SleepInit
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_RxProcess
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_RxInit
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_Init
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_CADInit
</UL>

<P><STRONG><a name="[84]"></a>SX1276LoRaSetPAOutput</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, sx1278.o(i.SX1276LoRaSetPAOutput))
<BR><BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_SpiWrite
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_SpiSetNssHigh
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_SpiRead
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_TxInit
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_Init
</UL>

<P><STRONG><a name="[85]"></a>SX1276LoRaSetPa20dBm</STRONG> (Thumb, 142 bytes, Stack size 0 bytes, sx1278.o(i.SX1276LoRaSetPa20dBm))
<BR><BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_SpiWrite
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_SpiSetNssHigh
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_SpiRead
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_TxInit
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_Init
</UL>

<P><STRONG><a name="[86]"></a>SX1276LoRaSetPacketCrcOn</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, sx1278.o(i.SX1276LoRaSetPacketCrcOn))
<BR><BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_SpiWrite
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_SpiSetNssHigh
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_SpiRead
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_TxInit
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_Init
</UL>

<P><STRONG><a name="[87]"></a>SX1276LoRaSetPreambleLength</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, sx1278.o(i.SX1276LoRaSetPreambleLength))
<BR><BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_SpiWrite
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_SpiSetNssHigh
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_SpiRead
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_TxInit
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_RxInit
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_Init
</UL>

<P><STRONG><a name="[81]"></a>SX1276LoRaSetRFFrequency</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, sx1278.o(i.SX1276LoRaSetRFFrequency))
<BR><BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_SpiWrite
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_SpiSetNssHigh
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_TxInit
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_RxInit
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_Init
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_CADInit
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276FHSSChangeChannel_ISR
</UL>

<P><STRONG><a name="[88]"></a>SX1276LoRaSetRFPower</STRONG> (Thumb, 236 bytes, Stack size 0 bytes, sx1278.o(i.SX1276LoRaSetRFPower))
<BR><BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_SpiWrite
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_SpiSetNssHigh
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_SpiRead
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_TxInit
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_Init
</UL>

<P><STRONG><a name="[89]"></a>SX1276LoRaSetSpreadingFactor</STRONG> (Thumb, 278 bytes, Stack size 0 bytes, sx1278.o(i.SX1276LoRaSetSpreadingFactor))
<BR><BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_SpiWrite
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_SpiSetNssHigh
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_SpiRead
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_Init
</UL>

<P><STRONG><a name="[7f]"></a>SX1276LoRaSetSymbTimeout</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, sx1278.o(i.SX1276LoRaSetSymbTimeout))
<BR><BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_SpiWrite
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_SpiSetNssHigh
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_SpiRead
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_RxInit
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_Init
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276FHSSChangeChannel_ISR
</UL>

<P><STRONG><a name="[c]"></a>SysTick_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32l0xx_it.o(i.SysTick_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_Increase
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l051xx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>SystemInit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, system_stm32l0xx.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l051xx.o(.text)
</UL>
<P><STRONG><a name="[60]"></a>UART_AdvFeatureConfig</STRONG> (Thumb, 240 bytes, Stack size 0 bytes, stm32l0xx_hal_uart.o(i.UART_AdvFeatureConfig))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[61]"></a>UART_CheckIdleState</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, stm32l0xx_hal_uart.o(i.UART_CheckIdleState))
<BR><BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[5f]"></a>UART_SetConfig</STRONG> (Thumb, 610 bytes, Stack size 0 bytes, stm32l0xx_hal_uart.o(i.UART_SetConfig))
<BR><BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK2Freq
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[8b]"></a>UART_WaitOnFlagUntilTimeout</STRONG> (Thumb, 256 bytes, Stack size 0 bytes, stm32l0xx_hal_uart.o(i.UART_WaitOnFlagUntilTimeout))
<BR><BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_CheckIdleState
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Transmit_IT
</UL>

<P><STRONG><a name="[23]"></a>USART2_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32l0xx_it.o(i.USART2_IRQHandler))
<BR><BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l051xx.o(RESET)
</UL>
<P><STRONG><a name="[8d]"></a>__0sprintf</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, printfa.o(i.__0sprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[db]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, printfa.o(i.__0sprintf))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_log
</UL>

<P><STRONG><a name="[8f]"></a>__0vsprintf</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, printfa.o(i.__0vsprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[dc]"></a>vsprintf</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, printfa.o(i.__0vsprintf))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_log
</UL>

<P><STRONG><a name="[43]"></a>__ARM_clz</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, depilogue.o(i.__ARM_clz))
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[ac]"></a>__ARM_common_memcpy1_5</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, mac_engine.o(i.__ARM_common_memcpy1_5))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_mac_engine_entry
</UL>

<P><STRONG><a name="[8c]"></a>__ARM_common_switch8</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32l0xx_hal_uart.o(i.__ARM_common_switch8))
<BR><BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[91]"></a>__haddock_hal_stm32l051_init</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, hal_init.o(i.__haddock_hal_stm32l051_init))
<BR><BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[93]"></a>__haddock_ipc_set_signal</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, ipc.o(i.__haddock_ipc_set_signal))
<BR><BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_log
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_signal
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;proc_HostifInit
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;haddock_timer_update_routine
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_controller_init
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_controller_entry
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_controller_tx
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_mac_engine_init
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_mac_engine_entry
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lpwan_radio_event__
</UL>

<P><STRONG><a name="[96]"></a>__haddock_process_create</STRONG> (Thumb, 114 bytes, Stack size 0 bytes, process.o(i.__haddock_process_create))
<BR><BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_log
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__haddock_process_set_name
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__process_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;proc_test_end_device_app_init
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;proc_HostifInit
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_controller_init
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_mac_engine_init
</UL>

<P><STRONG><a name="[98]"></a>__haddock_process_set_name</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, process.o(i.__haddock_process_set_name))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__haddock_process_create
</UL>

<P><STRONG><a name="[99]"></a>__haddock_timer_create</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, timer.o(i.__haddock_timer_create))
<BR><BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_log
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_signal
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__haddock_calc_timeout_value
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_pool_alloc_blk
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;proc_HostifEntry__
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;proc_test_end_device_app_init
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_controller_init
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_mac_engine_init
</UL>

<P><STRONG><a name="[9c]"></a>__os_timer_reconfig</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, timer.o(i.__os_timer_reconfig))
<BR><BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_log
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_empty
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_signal
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__haddock_calc_timeout_value
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;proc_test_end_device_app_entry
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;proc_HostifEntry__
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_controller_entry
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_controller_rx_continuously
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_mac_engine_entry
</UL>

<P><STRONG><a name="[a2]"></a>construct_device_frame_header</STRONG> (Thumb, 176 bytes, Stack size 0 bytes, construct_frame_hdr.o(i.construct_device_frame_header))
<BR><BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_log
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_mac_send_msg
</UL>

<P><STRONG><a name="[a3]"></a>construct_device_uplink_msg</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, construct_de_uplink_msg.o(i.construct_device_uplink_msg))
<BR><BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;haddock_memcpy
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_log
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_mac_send_msg
</UL>

<P><STRONG><a name="[b5]"></a>construct_u32_4</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lpwan_utils.o(i.construct_u32_4))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_mac_engine_init
</UL>

<P><STRONG><a name="[dd]"></a>device_get_mac_states</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, mac_engine.o(i.device_get_mac_states))
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;proc_test_end_device_app_entry
</UL>

<P><STRONG><a name="[b1]"></a>device_mac_engine_init</STRONG> (Thumb, 342 bytes, Stack size 0 bytes, mac_engine.o(i.device_mac_engine_init))
<BR><BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_log
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_controller_register_mac_engine
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_pool_create
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hdk_srand
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;haddock_memset
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__haddock_timer_create
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__haddock_process_create
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;short_modem_uuid
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;construct_u32_4
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_struct_process
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__haddock_ipc_set_signal
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_processes_init_easylinkin_modem
</UL>

<P><STRONG><a name="[b8]"></a>device_mac_send_msg</STRONG> (Thumb, 230 bytes, Stack size 0 bytes, mac_engine.o(i.device_mac_send_msg))
<BR><BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_log
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_pool_alloc_blk
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;construct_device_uplink_msg
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;construct_device_frame_header
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;proc_test_end_device_app_entry
</UL>

<P><STRONG><a name="[b9]"></a>find_any_1_bit_uint16</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hdk_utilities.o(i.find_any_1_bit_uint16))
<BR><BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_first_1_bit_uint16
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_pool_alloc_blk
</UL>

<P><STRONG><a name="[ba]"></a>find_first_1_bit_uint16</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, hdk_utilities.o(i.find_first_1_bit_uint16))
<BR><BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_log
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_any_1_bit_uint16
</UL>

<P><STRONG><a name="[a4]"></a>get_struct_process</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, process.o(i.get_struct_process))
<BR><BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_log
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;proc_HostifInit
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;haddock_timer_update_routine
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_controller_init
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_controller_entry
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_controller_tx
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_mac_engine_init
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_mac_engine_entry
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lpwan_radio_event__
</UL>

<P><STRONG><a name="[aa]"></a>haddock_enable_power_conserve</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, power_manager.o(i.haddock_enable_power_conserve))
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;proc_test_end_device_app_entry
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;proc_HostifEntry__
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;proc_test_end_device_app_init
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_controller_entry
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_controller_rx_stop
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_mac_engine_entry
</UL>

<P><STRONG><a name="[ad]"></a>haddock_get_time_tick_now</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, timer.o(i.haddock_get_time_tick_now))
<BR><BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_log
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_log
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_controller_tx
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_mac_engine_entry
</UL>

<P><STRONG><a name="[bb]"></a>haddock_malloc</STRONG> (Thumb, 150 bytes, Stack size 0 bytes, hdk_memory.o(i.haddock_malloc))
<BR><BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_log
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_pool_create
</UL>

<P><STRONG><a name="[6b]"></a>haddock_memcpy</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, hdk_memory.o(i.haddock_memcpy))
<BR><BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_log
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rf_Send
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rf_Get
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;construct_device_uplink_msg
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lpwan_radio_read
</UL>

<P><STRONG><a name="[b2]"></a>haddock_memset</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, hdk_memory.o(i.haddock_memset))
<BR><BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_log
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;haddock_process_module_init
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_pool_create
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_pool_alloc_blk
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_mac_engine_init
</UL>

<P><STRONG><a name="[bc]"></a>haddock_process_module_init</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, process.o(i.haddock_process_module_init))
<BR><BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;haddock_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[bd]"></a>haddock_timer_module_init</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, timer.o(i.haddock_timer_module_init))
<BR><BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_log
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_pool_create
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[be]"></a>haddock_timer_update_routine</STRONG> (Thumb, 328 bytes, Stack size 0 bytes, timer.o(i.haddock_timer_update_routine))
<BR><BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_destroy
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_empty
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_stop
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_struct_process
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__haddock_ipc_set_signal
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c0]"></a>hdk_rand</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, hdk_utilities.o(i.hdk_rand))
<BR><BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_log
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hdk_randr
</UL>

<P><STRONG><a name="[a9]"></a>hdk_randr</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, hdk_utilities.o(i.hdk_randr))
<BR><BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_log
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hdk_rand
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;proc_test_end_device_app_entry
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;proc_test_end_device_app_init
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_controller_entry
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_mac_engine_entry
</UL>

<P><STRONG><a name="[b6]"></a>hdk_srand</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hdk_utilities.o(i.hdk_srand))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_mac_engine_init
</UL>

<P><STRONG><a name="[c1]"></a>hostIf_Init</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, app_hostif.o(i.hostIf_Init))
<BR><BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;proc_HostifInit
</UL>

<P><STRONG><a name="[c3]"></a>hostIf_Run</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, app_hostif.o(i.hostIf_Run))
<BR><BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_Poll
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;proc_HostifEntry__
</UL>

<P><STRONG><a name="[c5]"></a>hostIf_SendToHost</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, app_hostif.o(i.hostIf_SendToHost))
<BR><BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_SendBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_log
</UL>

<P><STRONG><a name="[a7]"></a>lpwan_parse_beacon</STRONG> (Thumb, 366 bytes, Stack size 0 bytes, parse_beacon.o(i.lpwan_parse_beacon))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_mac_engine_entry
</UL>

<P><STRONG><a name="[a6]"></a>lpwan_parse_frame_header</STRONG> (Thumb, 262 bytes, Stack size 0 bytes, parse_frame_hdr.o(i.lpwan_parse_frame_header))
<BR><BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_mac_engine_entry
</UL>

<P><STRONG><a name="[cd]"></a>lpwan_radio_init</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lpwan_radio.o(i.lpwan_radio_init))
<BR><BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rf_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_controller_init
</UL>

<P><STRONG><a name="[ce]"></a>lpwan_radio_read</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, lpwan_radio.o(i.lpwan_radio_read))
<BR><BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;haddock_memcpy
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rf_Get
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_log
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_controller_entry
</UL>

<P><STRONG><a name="[de]"></a>lpwan_radio_register_radio_controller_pid</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lpwan_radio.o(i.lpwan_radio_register_radio_controller_pid))
<BR><BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_controller_init
</UL>

<P><STRONG><a name="[cf]"></a>lpwan_radio_routine</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lpwan_radio.o(i.lpwan_radio_routine))
<BR><BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rf_Routine
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_controller_entry
</UL>

<P><STRONG><a name="[d0]"></a>lpwan_radio_start_rx</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, lpwan_radio.o(i.lpwan_radio_start_rx))
<BR><BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rf_ReceiveStart
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rf_GetCurState
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_log
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_controller_entry
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_controller_rx_continuously
</UL>

<P><STRONG><a name="[d2]"></a>lpwan_radio_stop_rx</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, lpwan_radio.o(i.lpwan_radio_stop_rx))
<BR><BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rf_Stop
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_log
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_controller_entry
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_controller_rx_stop
</UL>

<P><STRONG><a name="[d3]"></a>lpwan_radio_tx</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, lpwan_radio.o(i.lpwan_radio_tx))
<BR><BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rf_Send
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rf_GetCurState
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_log
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_controller_entry
</UL>

<P><STRONG><a name="[25]"></a>main</STRONG> (Thumb, 144 bytes, Stack size 0 bytes, kernel_main.o(i.main))
<BR><BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_log
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;schedule_next
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_processes_init_easylinkin_modem
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;haddock_timer_update_routine
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;haddock_timer_module_init
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;haddock_process_module_init
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__haddock_hal_stm32l051_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[9b]"></a>mem_pool_alloc_blk</STRONG> (Thumb, 238 bytes, Stack size 0 bytes, mem_pool.o(i.mem_pool_alloc_blk))
<BR><BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_log
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_any_1_bit_uint16
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;haddock_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__haddock_timer_create
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_mac_send_msg
</UL>

<P><STRONG><a name="[b3]"></a>mem_pool_create</STRONG> (Thumb, 120 bytes, Stack size 0 bytes, mem_pool.o(i.mem_pool_create))
<BR><BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_log
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;haddock_malloc
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;haddock_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;haddock_timer_module_init
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_mac_engine_init
</UL>

<P><STRONG><a name="[af]"></a>mem_pool_free_blk</STRONG> (Thumb, 152 bytes, Stack size 0 bytes, mem_pool.o(i.mem_pool_free_blk))
<BR><BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_log
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_destroy
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_mac_engine_entry
</UL>

<P><STRONG><a name="[d4]"></a>os_processes_init_easylinkin_modem</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, easylinkin_modem_process.o(i.os_processes_init_easylinkin_modem))
<BR><BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;proc_test_end_device_app_init
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;proc_HostifInit
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_controller_init
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_mac_engine_init
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[bf]"></a>os_timer_destroy</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, timer.o(i.os_timer_destroy))
<BR><BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_stop
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_pool_free_blk
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;haddock_timer_update_routine
</UL>

<P><STRONG><a name="[a5]"></a>os_timer_start</STRONG> (Thumb, 240 bytes, Stack size 0 bytes, timer.o(i.os_timer_start))
<BR><BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_log
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_empty
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_add_tail
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;haddock_debug_os_timer_list_have_loop
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;proc_test_end_device_app_entry
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;proc_HostifEntry__
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;proc_test_end_device_app_init
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_controller_entry
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_controller_rx_continuously
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_mac_engine_entry
</UL>

<P><STRONG><a name="[ae]"></a>os_timer_stop</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, timer.o(i.os_timer_stop))
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_empty
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_destroy
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;haddock_timer_update_routine
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_controller_entry
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_controller_rx_stop
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_mac_engine_entry
</UL>

<P><STRONG><a name="[94]"></a>print_log</STRONG> (Thumb, 162 bytes, Stack size 0 bytes, simple_log.o(i.print_log))
<BR><BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;haddock_get_time_tick_now
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_log
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostIf_SendToHost
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsprintf
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;haddock_memcpy
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;haddock_get_time_tick_now
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_log
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;proc_HostifEntry__
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;proc_test_end_device_app_init
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hdk_rand
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_first_1_bit_uint16
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;haddock_timer_module_init
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;haddock_malloc
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_controller_init
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_controller_entry
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_controller_tx
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_controller_rx_continuously
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_controller_register_mac_engine
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_start
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_pool_free_blk
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_pool_create
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_pool_alloc_blk
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hdk_randr
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;haddock_memset
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;construct_device_uplink_msg
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;construct_device_frame_header
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__os_timer_reconfig
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__haddock_timer_create
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__haddock_process_create
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_mac_send_msg
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_mac_engine_init
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_mac_engine_entry
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_struct_process
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__haddock_ipc_set_signal
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lpwan_radio_tx
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lpwan_radio_stop_rx
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lpwan_radio_start_rx
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lpwan_radio_read
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lpwan_radio_event__
</UL>

<P><STRONG><a name="[d7]"></a>proc_HostifInit</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, process_hostif.o(i.proc_HostifInit))
<BR><BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostIf_Init
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__haddock_process_create
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_struct_process
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__haddock_ipc_set_signal
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_processes_init_easylinkin_modem
</UL>

<P><STRONG><a name="[d8]"></a>proc_test_end_device_app_init</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, process_test_end_device_app.o(i.proc_test_end_device_app_init))
<BR><BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_log
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_start
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hdk_randr
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;haddock_enable_power_conserve
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__haddock_timer_create
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__haddock_process_create
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_processes_init_easylinkin_modem
</UL>

<P><STRONG><a name="[d6]"></a>radio_controller_init</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, radio_controller.o(i.radio_controller_init))
<BR><BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_log
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__haddock_timer_create
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__haddock_process_create
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_struct_process
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__haddock_ipc_set_signal
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lpwan_radio_register_radio_controller_pid
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lpwan_radio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_processes_init_easylinkin_modem
</UL>

<P><STRONG><a name="[b7]"></a>radio_controller_register_mac_engine</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, radio_controller.o(i.radio_controller_register_mac_engine))
<BR><BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_log
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_mac_engine_init
</UL>

<P><STRONG><a name="[ab]"></a>radio_controller_rx_continuously</STRONG> (Thumb, 118 bytes, Stack size 0 bytes, radio_controller.o(i.radio_controller_rx_continuously))
<BR><BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_log
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_start
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__os_timer_reconfig
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lpwan_radio_start_rx
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_mac_engine_entry
</UL>

<P><STRONG><a name="[a8]"></a>radio_controller_rx_stop</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, radio_controller.o(i.radio_controller_rx_stop))
<BR><BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_stop
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;haddock_enable_power_conserve
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lpwan_radio_stop_rx
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_mac_engine_entry
</UL>

<P><STRONG><a name="[b0]"></a>radio_controller_tx</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, radio_controller.o(i.radio_controller_tx))
<BR><BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;haddock_get_time_tick_now
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_log
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_struct_process
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__haddock_ipc_set_signal
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_mac_engine_entry
</UL>

<P><STRONG><a name="[d5]"></a>schedule_next</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, scheduler.o(i.schedule_next))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b4]"></a>short_modem_uuid</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, lpwan_utils.o(i.short_modem_uuid))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_mac_engine_init
</UL>

<P><STRONG><a name="[df]"></a>sx1276_Dio2EnableInt</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, sx1278_dio.o(i.sx1276_Dio2EnableInt))
<BR><BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_TxProcess
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_TxInit
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_RxInit
</UL>

<P><STRONG><a name="[73]"></a>sx1278_CADInit</STRONG> (Thumb, 186 bytes, Stack size 0 bytes, sx1278.o(i.sx1278_CADInit))
<BR><BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276LoRaSetRFFrequency
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276LoRaSetOpMode
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_SpiWrite
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_SpiSetNssHigh
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_SpiRead
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rf_Routine
</UL>

<P><STRONG><a name="[77]"></a>sx1278_CADProcess</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, sx1278.o(i.sx1278_CADProcess))
<BR><BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_DioReadDio3
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_DioReadDio1
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_SpiWrite
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_SpiSetNssHigh
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rf_Routine
</UL>

<P><STRONG><a name="[e2]"></a>sx1278_DioDeInit</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, sx1278_dio.o(i.sx1278_DioDeInit))
<BR><BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_SleepProcess
</UL>

<P><STRONG><a name="[e4]"></a>sx1278_DioInit</STRONG> (Thumb, 204 bytes, Stack size 0 bytes, sx1278_dio.o(i.sx1278_DioInit))
<BR><BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_Init
</UL>

<P><STRONG><a name="[e5]"></a>sx1278_DioReadDio0</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, sx1278_dio.o(i.sx1278_DioReadDio0))
<BR><BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_TxProcess
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_RxProcess
</UL>

<P><STRONG><a name="[e1]"></a>sx1278_DioReadDio1</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, sx1278_dio.o(i.sx1278_DioReadDio1))
<BR><BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_RxProcess
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_CADProcess
</UL>

<P><STRONG><a name="[e0]"></a>sx1278_DioReadDio3</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, sx1278_dio.o(i.sx1278_DioReadDio3))
<BR><BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_RxProcess
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_CADProcess
</UL>

<P><STRONG><a name="[e7]"></a>sx1278_DioReset</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, sx1278_dio.o(i.sx1278_DioReset))
<BR><BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_Init
</UL>

<P><STRONG><a name="[83]"></a>sx1278_DioSetDioCtrl</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, sx1278_dio.o(i.sx1278_DioSetDioCtrl))
<BR><BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276LoRaSetOpMode
</UL>

<P><STRONG><a name="[6a]"></a>sx1278_GetBufferAddr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, sx1278.o(i.sx1278_GetBufferAddr))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rf_Send
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rf_Get
</UL>

<P><STRONG><a name="[69]"></a>sx1278_GetPacketSize</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, sx1278.o(i.sx1278_GetPacketSize))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rf_Get
</UL>

<P><STRONG><a name="[6e]"></a>sx1278_Init</STRONG> (Thumb, 748 bytes, Stack size 0 bytes, sx1278.o(i.sx1278_Init))
<BR><BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_DioReset
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_DioInit
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276LoRaSetSymbTimeout
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276LoRaSetSpreadingFactor
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276LoRaSetRFPower
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276LoRaSetRFFrequency
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276LoRaSetPreambleLength
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276LoRaSetPacketCrcOn
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276LoRaSetPa20dBm
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276LoRaSetPAOutput
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276LoRaSetOpMode
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_SpiWrite
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_SpiSetNssHigh
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_SpiRead
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_SpiInit
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_Get
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rf_Init
</UL>

<P><STRONG><a name="[74]"></a>sx1278_RxInit</STRONG> (Thumb, 360 bytes, Stack size 0 bytes, sx1278.o(i.sx1278_RxInit))
<BR><BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1276_Dio2EnableInt
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276LoRaSetSymbTimeout
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276LoRaSetRFFrequency
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276LoRaSetPreambleLength
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276LoRaSetOpMode
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_SpiWrite
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_SpiSetNssHigh
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_SpiRead
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rf_Routine
</UL>

<P><STRONG><a name="[75]"></a>sx1278_RxProcess</STRONG> (Thumb, 864 bytes, Stack size 0 bytes, sx1278.o(i.sx1278_RxProcess))
<BR><BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_DioReadDio3
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_DioReadDio1
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_DioReadDio0
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276LoRaSetOpMode
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_SpiWrite
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_SpiSetNssHigh
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_SpiRead
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rf_Routine
</UL>

<P><STRONG><a name="[7a]"></a>sx1278_SetPacketSize</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, sx1278.o(i.sx1278_SetPacketSize))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rf_Send
</UL>

<P><STRONG><a name="[71]"></a>sx1278_SleepInit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, sx1278.o(i.sx1278_SleepInit))
<BR><BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276LoRaSetOpMode
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rf_Routine
</UL>

<P><STRONG><a name="[78]"></a>sx1278_SleepProcess</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, sx1278.o(i.sx1278_SleepProcess))
<BR><BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_DioDeInit
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_SpiDeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rf_Routine
</UL>

<P><STRONG><a name="[ea]"></a>sx1278_SpiDeInit</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, sx1278_spi.o(i.sx1278_SpiDeInit))
<BR><BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_DeInit
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_SleepProcess
</UL>

<P><STRONG><a name="[e9]"></a>sx1278_SpiInit</STRONG> (Thumb, 204 bytes, Stack size 0 bytes, sx1278_spi.o(i.sx1278_SpiInit))
<BR><BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Init
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_DeInit
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_Init
</UL>

<P><STRONG><a name="[80]"></a>sx1278_SpiRead</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, sx1278_spi.o(i.sx1278_SpiRead))
<BR><BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Receive
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_TxInit
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_RxProcess
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_RxInit
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_Init
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_CADInit
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276LoRaSetSymbTimeout
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276LoRaSetSpreadingFactor
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276LoRaSetRFPower
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276LoRaSetPreambleLength
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276LoRaSetPacketCrcOn
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276LoRaSetPa20dBm
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276LoRaSetPAOutput
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276FHSSChangeChannel_ISR
</UL>

<P><STRONG><a name="[7d]"></a>sx1278_SpiSetNssHigh</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, sx1278_spi.o(i.sx1278_SpiSetNssHigh))
<BR><BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_TxProcess
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_TxInit
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_RxProcess
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_RxInit
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_Init
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_CADProcess
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_CADInit
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276LoRaSetSymbTimeout
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276LoRaSetSpreadingFactor
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276LoRaSetRFPower
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276LoRaSetRFFrequency
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276LoRaSetPreambleLength
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276LoRaSetPacketCrcOn
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276LoRaSetPa20dBm
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276LoRaSetPAOutput
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276LoRaSetOpMode
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276FHSSChangeChannel_ISR
</UL>

<P><STRONG><a name="[7e]"></a>sx1278_SpiWrite</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, sx1278_spi.o(i.sx1278_SpiWrite))
<BR><BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_TxProcess
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_TxInit
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_RxProcess
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_RxInit
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_Init
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_CADProcess
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_CADInit
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276LoRaSetSymbTimeout
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276LoRaSetSpreadingFactor
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276LoRaSetRFPower
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276LoRaSetRFFrequency
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276LoRaSetPreambleLength
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276LoRaSetPacketCrcOn
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276LoRaSetPa20dBm
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276LoRaSetPAOutput
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276LoRaSetOpMode
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276FHSSChangeChannel_ISR
</UL>

<P><STRONG><a name="[7c]"></a>sx1278_Stop</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, sx1278.o(i.sx1278_Stop))
<BR><BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276LoRaSetOpMode
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rf_Stop
</UL>

<P><STRONG><a name="[72]"></a>sx1278_TxInit</STRONG> (Thumb, 484 bytes, Stack size 0 bytes, sx1278.o(i.sx1278_TxInit))
<BR><BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1276_Dio2EnableInt
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276LoRaSetRFPower
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276LoRaSetRFFrequency
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276LoRaSetPreambleLength
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276LoRaSetPacketCrcOn
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276LoRaSetPa20dBm
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276LoRaSetPAOutput
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276LoRaSetOpMode
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_SpiWrite
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_SpiSetNssHigh
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_SpiRead
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rf_Routine
</UL>

<P><STRONG><a name="[76]"></a>sx1278_TxProcess</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, sx1278.o(i.sx1278_TxProcess))
<BR><BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_DioReadDio0
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1276_Dio2EnableInt
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276LoRaSetOpMode
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_SpiWrite
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_SpiSetNssHigh
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rf_Routine
</UL>

<P><STRONG><a name="[4]"></a>systick_Get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, systick.o(i.systick_Get))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx1278_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_hostif.o(.data)
</UL>
<P><STRONG><a name="[8a]"></a>systick_Increase</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, systick.o(i.systick_Increase))
<BR><BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[92]"></a>systick_Init</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, systick.o(i.systick_Init))
<BR><BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__haddock_hal_stm32l051_init
</UL>

<P><STRONG><a name="[c7]"></a>uart_GetReceiveLength</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, uart.o(i.uart_GetReceiveLength))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostIf_UartEvent__
</UL>

<P><STRONG><a name="[66]"></a>uart_GetSendByte</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, uart.o(i.uart_GetSendByte))
<BR><BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_TxCpltCallback
</UL>

<P><STRONG><a name="[c2]"></a>uart_Init</STRONG> (Thumb, 136 bytes, Stack size 0 bytes, uart.o(i.uart_Init))
<BR><BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostIf_Init
</UL>

<P><STRONG><a name="[c4]"></a>uart_Poll</STRONG> (Thumb, 262 bytes, Stack size 0 bytes, uart.o(i.uart_Poll))
<BR><BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostIf_Run
</UL>

<P><STRONG><a name="[c8]"></a>uart_ReceiveBytes</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, uart.o(i.uart_ReceiveBytes))
<BR><BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostIf_UartEvent__
</UL>

<P><STRONG><a name="[c6]"></a>uart_SendBytes</STRONG> (Thumb, 210 bytes, Stack size 0 bytes, uart.o(i.uart_SendBytes))
<BR><BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostIf_SendToHost
</UL>

<P><STRONG><a name="[63]"></a>uart_SetReceiveByte</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, uart.o(i.uart_SetReceiveByte))
<BR><BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxCpltCallback
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[3]"></a>hostIf_SendByteWithIt__</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, app_hostif.o(i.hostIf_SendByteWithIt__))
<BR><BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit_IT
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_hostif.o(.data)
</UL>
<P><STRONG><a name="[2]"></a>hostIf_UartDeInit__</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app_hostif.o(i.hostIf_UartDeInit__))
<BR>[Address Reference Count : 1]<UL><LI> app_hostif.o(.data)
</UL>
<P><STRONG><a name="[5]"></a>hostIf_UartEvent__</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, app_hostif.o(i.hostIf_UartEvent__))
<BR><BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_ReceiveBytes
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_GetReceiveLength
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_hostif.o(.data)
</UL>
<P><STRONG><a name="[1]"></a>hostIf_UartInit__</STRONG> (Thumb, 132 bytes, Stack size 0 bytes, app_hostif.o(i.hostIf_UartInit__))
<BR><BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive_IT
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_hostif.o(.data)
</UL>
<P><STRONG><a name="[55]"></a>SPI_WaitOnFlagUntilTimeout</STRONG> (Thumb, 196 bytes, Stack size 0 bytes, stm32l0xx_hal_spi.o(i.SPI_WaitOnFlagUntilTimeout))
<BR><BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Receive
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive
</UL>

<P><STRONG><a name="[5b]"></a>UART_Receive_IT</STRONG> (Thumb, 180 bytes, Stack size 0 bytes, stm32l0xx_hal_uart.o(i.UART_Receive_IT))
<BR><BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxCpltCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[5c]"></a>UART_Transmit_IT</STRONG> (Thumb, 186 bytes, Stack size 0 bytes, stm32l0xx_hal_uart.o(i.UART_Transmit_IT))
<BR><BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_TxCpltCallback
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[2a]"></a>lpwan_radio_event__</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, lpwan_radio.o(i.lpwan_radio_event__))
<BR><BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_log
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_struct_process
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__haddock_ipc_set_signal
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lpwan_radio.o(i.lpwan_radio_init)
</UL>
<P><STRONG><a name="[29]"></a>device_mac_engine_entry</STRONG> (Thumb, 2768 bytes, Stack size 0 bytes, mac_engine.o(i.device_mac_engine_entry))
<BR><BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;haddock_get_time_tick_now
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_log
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_controller_tx
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_controller_rx_stop
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_controller_rx_continuously
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_stop
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_start
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_pool_free_blk
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lpwan_parse_frame_header
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lpwan_parse_beacon
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hdk_randr
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;haddock_enable_power_conserve
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__os_timer_reconfig
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy1_5
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_struct_process
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__haddock_ipc_set_signal
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mac_engine.o(i.device_mac_engine_init)
</UL>
<P><STRONG><a name="[2d]"></a>radio_controller_entry</STRONG> (Thumb, 716 bytes, Stack size 0 bytes, radio_controller.o(i.radio_controller_entry))
<BR><BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_log
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_stop
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_start
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hdk_randr
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;haddock_enable_power_conserve
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__os_timer_reconfig
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_struct_process
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__haddock_ipc_set_signal
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lpwan_radio_tx
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lpwan_radio_stop_rx
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lpwan_radio_start_rx
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lpwan_radio_routine
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lpwan_radio_read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> radio_controller.o(i.radio_controller_init)
</UL>
<P><STRONG><a name="[95]"></a>is_signal</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, ipc.o(i.is_signal))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__haddock_ipc_set_signal
</UL>

<P><STRONG><a name="[97]"></a>__process_alloc</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, process.o(i.__process_alloc))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__haddock_process_create
</UL>

<P><STRONG><a name="[90]"></a>__haddock_calc_timeout_value</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, timer.o(i.__haddock_calc_timeout_value))
<BR><BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__os_timer_reconfig
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__haddock_timer_create
</UL>

<P><STRONG><a name="[d9]"></a>haddock_debug_os_timer_list_have_loop</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, timer.o(i.haddock_debug_os_timer_list_have_loop))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_start
</UL>

<P><STRONG><a name="[9a]"></a>is_signal</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, timer.o(i.is_signal))
<BR><BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__os_timer_reconfig
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__haddock_timer_create
</UL>

<P><STRONG><a name="[da]"></a>list_add_tail</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, timer.o(i.list_add_tail))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_start
</UL>

<P><STRONG><a name="[9d]"></a>list_empty</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, timer.o(i.list_empty))
<BR><BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;haddock_timer_update_routine
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_stop
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_start
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__os_timer_reconfig
</UL>

<P><STRONG><a name="[2b]"></a>proc_HostifEntry__</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, process_hostif.o(i.proc_HostifEntry__))
<BR><BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_log
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostIf_Run
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_start
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;haddock_enable_power_conserve
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__os_timer_reconfig
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__haddock_timer_create
</UL>
<BR>[Address Reference Count : 1]<UL><LI> process_hostif.o(i.proc_HostifInit)
</UL>
<P><STRONG><a name="[2c]"></a>proc_test_end_device_app_entry</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, process_test_end_device_app.o(i.proc_test_end_device_app_entry))
<BR><BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_start
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hdk_randr
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;haddock_enable_power_conserve
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__os_timer_reconfig
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_mac_send_msg
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_get_mac_states
</UL>
<BR>[Address Reference Count : 1]<UL><LI> process_test_end_device_app.o(i.proc_test_end_device_app_init)
</UL>
<P><STRONG><a name="[9e]"></a>_fp_digits</STRONG> (Thumb, 316 bytes, Stack size 0 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[8e]"></a>_printf_core</STRONG> (Thumb, 1754 bytes, Stack size 0 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0vsprintf
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
</UL>

<P><STRONG><a name="[a1]"></a>_printf_post_padding</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[a0]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[28]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printfa.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0vsprintf
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
</UL>
<BR>[Address Reference Count : 2]<UL><LI> printfa.o(i.__0sprintf)
<LI> printfa.o(i.__0vsprintf)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
